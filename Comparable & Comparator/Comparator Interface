***********************COMPARATOR INTERFACE************************************************

1. Java Comparator interface is used to order the objects of a user-defined class.

2. This interface is found in java.util package and contains 2 methods compare(Object obj1,Object obj2) and equals(Object element).

3. It provides multiple sorting sequences, i.e., you can sort the elements on the basis of any data member, for example, rollno, name, age    	 or anything else.

4. Below example does the sorting based on name and salary, if name are same then it will compare salary and thus accordingly results will be  	  printed.

5. 3 classes are made : 
	i. Employee. java
	ii. MyComparator.java
	iii. Main class

6. 
	class Employee
	{
		private int id;
		private STring name;
		private int salary;
	
		// getters & setters 
	}
	
	// MyComparator class

	public class MyComparator implements Comparator<Employee> {

	@Override
	public int compare(Employee e1, Employee e2) {

	int name = e1.getName().compareTo(e2.getName());
	int salary = e1.getSalary()-e2.getSalary();	
	return ((name==0)?salary:name); // if name are same i.e., 0 return salary else return by name only

	}

	// Main class
	class Example
	{
		main()
		{
			//add values in employee object;
			// create list object and add employee values in it.
			Collections.sort(list, new MyComparator());		// it will sort list based on compare() method.
			sysout(list);
		}	
	}

